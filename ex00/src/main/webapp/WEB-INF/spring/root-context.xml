<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<!-- 스프링 프레임워크에서 관리해야 하는 객체를 설정하는 파일 -->	
	<!-- 아래쪽의 Namespaces탭에서 context 항목을 체크한다. -->		
	
	<!-- 커넥션 풀 -->
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" ></property>
		<property name="jdbcUrl" value="jdbc:oracle:thin:@localhost:1521:XE"></property>
		<property name="username" value="book_ex"></property>
		<property name="password" value="book_ex"></property>
	</bean>
	
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<constructor-arg ref="hikariConfig"/>
	</bean>
	
	<!-- Mybatis에서 가장 핵심적인 객체 : SQLSession, SQLSessionFactory 
		SQLSession을 통해서 Connection을 생성하거나 원하는 SQL을 전달하고, 결과를 리턴받는 구조로 작성.
	-->
	<bean id="sqlSessionFactoryFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	
	
	
	
	<context:component-scan base-package="org.zerock.sample"></context:component-scan>
	<!-- 빈으로 등록해주고 나면 아래쪽의 Beans Graph에 추가 된 것을 확인 할 수 있다. -->
	
</beans>
